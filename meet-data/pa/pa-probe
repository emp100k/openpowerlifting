#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Probes for new meets from Powerlifting Australia.
# What a nice federation! Results are already in tables!


from bs4 import BeautifulSoup
import datetime
import os
import shutil
import sys
import urllib.request


URLS = ["https://powerliftingaustralia.com/results/",
        "https://powerliftingaustralia.com/results/2007-results/"]
BASEURL = "https://powerliftingaustralia.com"
FEDDIR = os.path.dirname(os.path.realpath(__file__))


def error(msg):
    print(msg, file=sys.stderr)
    sys.exit(1)


def color(s):
    return "\033[1;36m" + s + "\033[0;m"


def gethtml(url):
    with urllib.request.urlopen(url) as r:
        return r.read()


def getmeetlist(html):
    soup = BeautifulSoup(html, 'html.parser')

    # Just look at all links from the entire page.
    # There seems to be a parsing error when looking just at the 'post-content'
    # div, where some <a> tags at the end get overlooked for some unknown reason.

    urls = []
    for a in soup.find_all('a'):
        # Apparently some <a> tags don't have an href.
        try:
            url = a['href']
        except:
            continue

        # All PA results are in /wp-content/uploads/results/.
        if not '/wp-content/uploads/results/' in url:
            continue

        if not 'http' in url:
            url = BASEURL + url
        if not url in urls:
            urls.append(url)

    return urls


def getenteredurls():
    urls = []
    for dirname, subdirs, files in os.walk(FEDDIR):
        if 'URL' in files:
            with open(dirname + os.sep + 'URL', 'r') as fd:
                for k in fd.readlines():
                    urls.append(k.strip())
    return urls


def main():
    meetlist = []
    for url in URLS:
        html = gethtml(url)
        meetlist = meetlist + getmeetlist(html)

    known = getenteredurls()

    for m in meetlist:
        if not m in known:
            print(color('[PA] ') + m)
    print(color('[PA] ') + "Continue working through archive.")


if __name__ == '__main__':
    main()
